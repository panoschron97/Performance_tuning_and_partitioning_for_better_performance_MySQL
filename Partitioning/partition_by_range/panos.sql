CREATE DATABASE IF NOT EXISTS dbparticion1;
--
USE dbparticion1;
--
CREATE TABLE IF NOT EXISTS employees_partRANGE_STOREID
(id INT NOT NULL AUTO_INCREMENT, 
fname VARCHAR(30), 
lname VARCHAR(30), 
hired DATE NOT NULL DEFAULT '1970-01-01', 
separated DATE NOT NULL DEFAULT '9999-12-31',
job_code INTEGER NOT NULL,
store_id INTEGER NOT NULL,
PRIMARY KEY (id, store_id)
);
--
CREATE TABLE IF NOT EXISTS employees_partRANGE_STOREID1
(id INT NOT NULL AUTO_INCREMENT, 
fname VARCHAR(30), 
lname VARCHAR(30), 
hired DATE NOT NULL DEFAULT '1970-01-01', 
separated DATE NOT NULL DEFAULT '9999-12-31',
job_code INTEGER NOT NULL,
store_id INTEGER NOT NULL,
PRIMARY KEY (id, store_id)
)
PARTITION BY RANGE (store_id)
(PARTITION p0 VALUES LESS THAN (6),
PARTITION p1 VALUES LESS THAN (11),
PARTITION p2 VALUES LESS THAN (16),
PARTITION p3 VALUES LESS THAN (21)
);
--
DESCRIBE employees_partRANGE_STOREID;
DESCRIBE employees_partRANGE_STOREID1;
--
CREATE TABLE IF NOT EXISTS employees_partRANGE_YEAR
( id INT NOT NULL AUTO_INCREMENT, 
fname VARCHAR(30),
 lname VARCHAR(30),
 hired DATE NOT NULL DEFAULT '1970-01-01',
 separated DATE NOT NULL DEFAULT '9999-12-31',
 job_code INT,
 store_id INT,
 PRIMARY KEY(id, hired)
);
--
CREATE TABLE IF NOT EXISTS employees_partRANGE_YEAR1
( id INT NOT NULL AUTO_INCREMENT, 
fname VARCHAR(30),
 lname VARCHAR(30),
 hired DATE NOT NULL DEFAULT '1970-01-01',
 separated DATE NOT NULL DEFAULT '9999-12-31',
 job_code INT,
 store_id INT,
 PRIMARY KEY(id, hired)
)
PARTITION BY RANGE (YEAR(hired))
(PARTITION p0 VALUES LESS THAN (2001),
PARTITION p1 VALUES LESS THAN (2004),
PARTITION p2 VALUES LESS THAN (2007),
PARTITION p3 VALUES LESS THAN (2010),
PARTITION p4 VALUES LESS THAN (2013),
PARTITION p5 VALUES LESS THAN (2016),
PARTITION p6 VALUES LESS THAN (2019),
PARTITION p7 VALUES LESS THAN (MAXVALUE)
);
--
DESCRIBE employees_partRANGE_YEAR;
DESCRIBE employees_partRANGE_YEAR1;
--
SET GLOBAL local_infile = 1;
SHOW GLOBAL VARIABLES LIKE 'local_infile';
SHOW VARIABLES LIKE 'secure_file_priv';
--
LOAD DATA INFILE 'C:\\Users\\panos\\Desktop\\MySQL_Performance_Tuning_Partitioning\\Partitioning\\partition_by_range\\partitioning_by_range\\employees_data.csv'
INTO TABLE employees_partRANGE_STOREID
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
(fname, lname, hired, separated, job_code, store_id);
-- IGNORE 1 LINES;
INSERT INTO employees_partRANGE_STOREID1 SELECT * FROM employees_partRANGE_STOREID;
COMMIT;
--
SELECT COUNT(*) AS number_of_rows FROM employees_partRANGE_STOREID1;
--
SELECT * FROM employees_partRANGE_STOREID1 WHERE id = (SELECT MAX(id) AS id FROM employees_partRANGE_STOREID1 LIMIT 1) LIMIT 1;
--
SELECT COUNT(*) AS number_of_rows FROM employees_partRANGE_STOREID1 WHERE store_id >= 21;
--
CREATE INDEX idx_hired ON employees_partRANGE_STOREID1(hired);
--
SELECT * FROM employees_partRANGE_STOREID1 LIMIT 1000001;
SELECT * FROM employees_partRANGE_STOREID1 PARTITION(p0) LIMIT 1000001;
SELECT * FROM employees_partRANGE_STOREID1 PARTITION(p1) LIMIT 1000001;
SELECT * FROM employees_partRANGE_STOREID1 PARTITION(p2) LIMIT 1000001;
SELECT * FROM employees_partRANGE_STOREID1 PARTITION(p3) LIMIT 1000001;
--
SELECT id, hired, store_id FROM employees_partRANGE_STOREID1 LIMIT 1000001;
SELECT id, hired, store_id FROM employees_partRANGE_STOREID1 PARTITION(p0) LIMIT 1000001;
SELECT id, hired, store_id FROM employees_partRANGE_STOREID1 PARTITION(p1) LIMIT 1000001;
SELECT id, hired, store_id FROM employees_partRANGE_STOREID1 PARTITION(p2) LIMIT 1000001;
SELECT id, hired, store_id FROM employees_partRANGE_STOREID1 PARTITION(p3) LIMIT 1000001;
--
SELECT * FROM employees_partRANGE_STOREID1 WHERE hired BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT * FROM employees_partRANGE_STOREID1 PARTITION(p0) WHERE hired BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT * FROM employees_partRANGE_STOREID1 PARTITION(p1) WHERE hired BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT * FROM employees_partRANGE_STOREID1 PARTITION(p2) WHERE hired BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT * FROM employees_partRANGE_STOREID1 PARTITION(p3) WHERE hired BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
--
SELECT id, hired, store_id FROM employees_partRANGE_STOREID1 WHERE hired BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT id, hired, store_id FROM employees_partRANGE_STOREID1 PARTITION(p0) WHERE hired BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT id, hired, store_id FROM employees_partRANGE_STOREID1 PARTITION(p1) WHERE hired BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT id, hired, store_id FROM employees_partRANGE_STOREID1 PARTITION(p2) WHERE hired BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT id, hired, store_id FROM employees_partRANGE_STOREID1 PARTITION(p3) WHERE hired BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
--
LOAD DATA INFILE 'C:\\Users\\panos\\Desktop\\MySQL_Performance_Tuning_Partitioning\\Partitioning\\partition_by_range\\partitioning_by_range\\employees_data.csv'
INTO TABLE employees_partRANGE_YEAR
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
(fname, lname, hired, separated, job_code, store_id);
-- IGNORE 1 LINES;
INSERT INTO employees_partRANGE_YEAR1 SELECT * FROM employees_partRANGE_YEAR;
COMMIT;
--
SELECT COUNT(*) AS number_of_rows FROM employees_partRANGE_YEAR1;
--
SELECT * FROM employees_partRANGE_YEAR1 WHERE id = (SELECT MAX(id) AS id FROM employees_partRANGE_YEAR1 LIMIT 1) LIMIT 1;
--
SELECT COUNT(*) AS number_of_rows FROM employees_partRANGE_YEAR1 WHERE YEAR(hired) >= 2019;
--
CREATE INDEX idx_separated ON employees_partRANGE_YEAR1(separated);
--
SELECT * FROM employees_partRANGE_YEAR1 LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p0) LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p1) LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p2) LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p3) LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p4) LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p5) LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p6) LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p7) LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p8) LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p9) LIMIT 1000001;
--
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p0) LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p1) LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p2) LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p3) LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p4) LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p5) LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p6) LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p7) LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p8) LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p9) LIMIT 1000001;
--
SELECT * FROM employees_partRANGE_YEAR1 WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p0) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p1) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p2) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p3) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p4) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p5) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p6) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p7) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p8) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT * FROM employees_partRANGE_YEAR1 PARTITION(p9) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
--
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p0) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p1) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p2) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p3) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p4) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p5) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p6) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p7) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p8) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
SELECT id, hired, separated FROM employees_partRANGE_YEAR1 PARTITION(p9) WHERE separated BETWEEN "2001-01-01" AND "2001-12-31" LIMIT 1000001;
--
ALTER TABLE employees_partRANGE_YEAR1 REORGANIZE PARTITION p0, p1 INTO
(PARTITION p1 VALUES LESS THAN(2004));
--
SHOW CREATE TABLE employees_partRANGE_YEAR1;
--
ALTER TABLE employees_partRANGE_YEAR1 REORGANIZE PARTITION p1 INTO
(PARTITION p0 VALUES LESS THAN(2001),
PARTITION p1 VALUES LESS THAN(2004));
--
SHOW CREATE TABLE employees_partRANGE_YEAR1;
--
ALTER TABLE employees_partRANGE_YEAR1 DROP PARTITION p1;
ALTER TABLE employees_partRANGE_YEAR1 DROP PARTITION p0;
--
SHOW CREATE TABLE employees_partRANGE_YEAR1;
--
ALTER TABLE employees_partRANGE_YEAR1 DROP PARTITION p7;
--
SHOW CREATE TABLE employees_partRANGE_YEAR1;
--
ALTER TABLE employees_partRANGE_YEAR1 ADD PARTITION (PARTITION p8 VALUES LESS THAN (2021));
--
SHOW CREATE TABLE employees_partRANGE_YEAR1;
--
ALTER TABLE employees_partRANGE_YEAR1 ADD PARTITION (PARTITION p9 VALUES LESS THAN (MAXVALUE));
--
SHOW CREATE TABLE employees_partRANGE_YEAR1;
--
ALTER TABLE employees_partRANGE_YEAR1 TRUNCATE PARTITION p8;
--
ALTER TABLE employees_partRANGE_YEAR1 DROP PARTITION p8;
--
SHOW CREATE TABLE employees_partRANGE_YEAR1;
--
DROP INDEX idx_separated ON employees_partRANGE_YEAR1;
--
DROP INDEX idx_hired ON employees_partRANGE_STOREID1;
--
DELETE FROM employees_partRANGE_YEAR1;
COMMIT;
--
TRUNCATE TABLE employees_partRANGE_YEAR1;
--
DROP TABLE IF EXISTS employees_partRANGE_YEAR1;
--
DELETE FROM employees_partRANGE_STOREID1;
COMMIT;
--
TRUNCATE TABLE employees_partRANGE_STOREID1;
--
DROP TABLE IF EXISTS employees_partRANGE_STOREID1;
--
DROP DATABASE IF EXISTS dbparticion1;